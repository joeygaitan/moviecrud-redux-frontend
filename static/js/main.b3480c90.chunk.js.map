{"version":3,"sources":["actions/index.js","reducers/index.js","components/Header.js","components/MovieList.js","components/Movie.js","components/AddMovie.js","App.js","serviceWorker.js","index.js"],"names":["getMovies","dispatch","axios","get","then","res","type","payload","data","catch","error","console","log","removeMovie","id","delete","concat","getMovie","updateMovie","body","fn","put","addMovie","post","initialState","all","selected","combineReducers","movies","state","arguments","length","undefined","action","Object","objectSpread","Header","react_default","a","createElement","className","align","Component","MovieList","componentDidMount","_this","props","_this2","this","components_Header","map","ele","style","padding","width","height","src","picture_url","alt","paddingBottom","title","Link","to","border","marginRight","marginBottom","onClick","paddingTop","connect","bindActionCreators","Movie","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","match","params","clicked","e","setState","editClicked","handleSubmit","preventDefault","movie","history","push","handleChange","defineProperty","target","name","value","Fragment","director","years","rating","onSubmit","onChange","getDerivedStateFromProps","hasOwnProperty","AddMovie","change","event","class","marginLeft","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","store","createStore","reducers","applyMiddleware","thunk","logger","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b3480c90.chunk.js","sourcesContent":["import axios from 'axios'\nexport const GET_MOVIES = 'GET_MOVIES'\n\nexport const getMovies = () => {\n    return (dispatch) => {\n        axios.get(`REACT_APP_API_URL/movies`)\n        .then(res=>{\n            dispatch({\n                type: GET_MOVIES,\n                payload: res.data\n            })\n        })\n        .catch((error)=>{\n            console.log(error)\n        })\n    }\n}\n\nexport const removeMovie = (id) => {\n    return (dispatch) => {\n        axios.delete(`REACT_APP_API_URL/movies/${id}`)\n        .then(res=>{\n            dispatch(getMovies())\n        })\n        .catch((error)=>{console.log(error)})\n    }\n}\n\nexport const getMovie = (id) =>{\n    return (dispatch) => {\n        axios.get(`REACT_APP_API_URL/movies/${id}`)\n        .then(res=>{\n            dispatch({\n                type: 'GET_MOVIE',\n                payload: res.data\n            })\n        })\n        .catch((error)=>{\n            console.log(error);\n        })\n    }\n}\n\nexport const updateMovie = (body, id, fn) => {\n    return (dispatch) => {\n        axios.put(`REACT_APP_API_URL/movies/${id}`, body)\n        .then(res=>{\n            dispatch(getMovies())\n            fn()\n        })\n        .catch((error)=>{\n            console.log(error);\n        })\n    }\n}\n\nexport const addMovie = (body)=>{\n    return (dispatch) => {\n        axios.post(`REACT_APP_API_URL/movies/`, body)\n        .then(res=>{\n            dispatch(getMovies())\n        })\n        .catch((error)=>{\n            console.log(error);\n        })\n    }\n}","import { combineReducers } from \"redux\";\nimport { GET_MOVIES } from '../actions/index'\nconst initialState = {\n    all: [],\n    selected: {}\n}\n\nconst movies = (state = initialState, action) => {\n\n    switch (action.type) {\n        case GET_MOVIES:\n        return { ...state, all: action.payload }\n        case \"GET_MOVIE\" :\n        return {...state, selected: action.payload}\n        // case \"UPDATE_MOVIE\":\n        // return {...state, selected: action.payload}\n      default:\n        return state\n    }\n}\n\nexport default combineReducers({\n    movies,\n})","import React, { Component } from 'react';\n\nclass Header extends Component {\n\n    render() { \n        return ( \n            <div>\n                <div className=\"jumbotron\">\n                    <h1 align=\"center\">Gait's Movie Rating</h1>\n                    <p align='center'>Add your favorite movies, and give them a score out of 5</p>\n                </div>\n            </div>\n         );\n    }\n}\n \nexport default Header;","import React, { Component } from 'react';\nimport { getMovies, removeMovie} from '../actions/index'\nimport { bindActionCreators } from 'redux';\nimport { connect} from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Header from './Header';\nclass MovieList extends Component {\n    componentDidMount = () => {\n        this.props.getMovies()\n    }\n\n    removeMovie = (id) => {\n      this.props.removeMovie(id)\n    }\n\n    render() { \n        return ( \n            <div>\n              <Header/>\n            <div className=\"container\">\n              <div className =\"row justify-content-center\">\n                {this.props.movies.map((ele)=>{\n                  return  (\n                  <div className=\"col col-lg-4 d-flex\" style={{padding:\"10px\"}}>\n                    <div className=\"card\">\n                    <img className=\"card-img-top img-thumbnail\" style={{width: \"100%\",height:\"40%\"}} src={ele.picture_url} alt=\"Responsive image\"/>\n                      <div className=\"card-body\" style={{paddingBottom:\"5px\"}}>\n                          <h2 className=\"card-title\">{ele.title}</h2>\n                          <Link to = {`/${ele.id}`}><button className=\"btn btn-dark\" style={{border:\"-20px\", marginRight:\"30px\",marginBottom:\"5px\"}}>View Movie</button></Link>\n                          <button className=\"btn btn-dark\" onClick={()=>{\n                            this.removeMovie(ele.id)\n                          }}>delete</button>\n                      </div>\n                    </div>\n                  </div>\n                )\n                })}\n              </div>\n            <div className='row' style={{paddingTop: \"20px\"}}>\n                <div className=\"col-sm-4\">\n                    <Link to='/AddMovie'><button className=\"btn btn-dark\" style={{marginBottom:\"50px\"}}>Add Movie</button></Link>\n                </div>\n            </div>\n            </div>\n          </div>\n         );\n    }\n}\n\nconst mapStateToProps = state => ({\n    movies: state.movies.all\n  })\n  \n  const mapDispatchToProps = dispatch =>\n    bindActionCreators({\n      getMovies: getMovies, removeMovie: removeMovie\n    }, dispatch)  \n \nexport default connect(mapStateToProps, mapDispatchToProps)(MovieList)","import React, { Component } from 'react';\nimport { getMovie, updateMovie} from '../actions/index';\nimport { bindActionCreators } from 'redux';\nimport { connect} from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport Header from './Header';\n\n\nclass Movie extends Component {\n    constructor(props){\n        super(props)\n        \n        this.state = {\n            editClicked: true,\n            movie:{...props.movie}\n        }\n    }\n\n    componentDidMount = () => {        \n        this.props.getMovie(this.props.match.params.id)\n    }\n\n    static getDerivedStateFromProps = (props, state)=>{\n        if(!state.movie.hasOwnProperty('title')){\n        console.log(\"I am in here\",props);\n\n            return {...state, movie : props.movie}\n        }\n    }\n\n    clicked = (e) => {\n        this.setState({\n           editClicked: !this.state.editClicked\n        })\n    }\n\n    handleSubmit= (e)=>{\n        e.preventDefault()\n\n        this.props.updateMovie(this.state.movie, this.props.match.params.id, () => {\n            this.props.history.push('/')\n        })\n\n       \n    }\n\n    handleChange = (e) => {\n        const movie = {\n            [e.target.name] : e.target.value\n        }\n        this.setState({\n            movie: {...this.state.movie, ...movie}\n        })\n    }\n\n    render(){\n        \n        return (\n        <div>\n            <Header/>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <div className=\"card\" style={{width: \"18rem\"}} align=\"center\">\n                            {this.state.editClicked ? \n                            <>\n                            <img className=\"card-img-top img-thumbnail\" src={this.props.movie.picture_url}/>\n                            </>\n                            : null }\n                            <div className=\"card-body\">\n                               {this.state.editClicked ?\n                               <>\n                                <h3 className=\"card-text\">{this.props.movie.title}</h3>\n                                <h6 className=\"card-text\">{this.props.movie.director}</h6>\n                                <p className=\"card-text\">{this.props.movie.years}</p>\n                                <p className=\"card-text\">{this.props.movie.rating}</p>\n                                </>\n                                : \n                                <>\n                                    <form id=\"post-form\" onSubmit={this.handleSubmit}>\n                                        <div className=\"form-group\">\n                                        <label>Title: {this.props.movie.title}</label>\n                                        <input name =\"title\" type=\"text\" className=\"form-control\" value={this.state.movie.title} onChange={this.handleChange}></input>\n                                        </div>\n                                        <div className=\"form-group\">\n                                        <label>Director: {this.props.movie.director}</label>\n                                        <input name =\"director\" type=\"text\" className=\"form-control\" value={this.state.movie.director} onChange={this.handleChange}></input>\n                                        </div>\n                                        <div className=\"form-group\">\n                                        <label>Release Date: {this.props.movie.years}</label>\n                                        <input name =\"years\" type=\"text\" className=\"form-control\" value={this.state.movie.years} onChange={this.handleChange}></input>\n                                        </div>\n                                        <div className=\"form-group\">\n                                        <label>Movie Rating : {this.props.movie.rating}</label>\n                                        <select name ='rating' className=\"form-control\" value={this.state.movie.rating} onChange={this.handleChange}>\n                                            <option>1</option>\n                                            <option>2</option>\n                                            <option>3</option>\n                                            <option>4</option>\n                                            <option>5</option>\n                                        </select>\n                                        </div>\n                                        <div className=\"form-group\">\n                                        <label>Picture URL: {this.props.movie.picture_url}</label>\n                                        <input name =\"picture_url\" type=\"text\" className=\"form-control\" value={this.state.movie.picture_url} onChange={this.handleChange}></input>\n                                        </div>\n\n                                        <button type=\"submit\" className=\"btn btn-dark btn-large\">Update Movie</button>\n                                    </form>\n                                </>\n                               }\n                            </div>\n                            <div className=\"card-body\">\n                                <button className='btn btn-dark' onClick={this.clicked} style={{marginBottom:\"5px\"}}>Edit Movie</button>\n                                <Link to='/'><button className=\"btn btn-dark\">Go back to Movies</button></Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n        </div>\n    </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    movie: state.movies.selected\n  })\n\n  const mapDispatchToProps = dispatch =>\n    bindActionCreators({\n      getMovie: getMovie, updateMovie: updateMovie\n    }, dispatch) \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movie);","import React, { Component } from 'react';\nimport { addMovie } from '../actions/index';\nimport { bindActionCreators } from 'redux';\nimport { connect} from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport Header from './Header';\n\nclass AddMovie extends Component{\nconstructor(props){\n  super(props)\n\n  this.state = {\n    title: \"\",\n    director: \"\",\n    years: 1900,\n    rating: 0,\n    picture_url: \"\"\n  }\n}\n\nchange = (event) =>{\n  this.setState({\n     [event.target.name] : event.target.value\n  })\n}\n\nonSubmit = (event) => {\n  event.preventDefault();\n  this.props.addMovie(this.state)\n\n  this.props.history.push('/')\n}\n\n  render(){\n    return(\n      <>\n        <Header/>\n        <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                    <form id=\"post-form\" onSubmit={this.onSubmit}>\n                            <div className=\"form-group\">\n                                <label>Title</label>\n                                <input name =\"title\" type=\"text\" className=\"form-control\" value={this.state.title} onChange={this.change}></input>\n                            </div>\n                            <div className=\"form-group\">\n                            <label>Director</label>\n                                <input name =\"director\" type=\"text\" className=\"form-control\" value={this.state.director} onChange={this.change}></input>\n                            </div>\n                            <div className=\"form-group\">\n                            <label>Year</label>\n                                <input name =\"years\" type=\"number\" className=\"form-control\" value={this.state.years} onChange={this.change}></input>\n                            </div>\n                            <div className=\"form-group\">\n                            <label>Rating</label>\n                            <select name ='rating' class=\"form-control\" value={this.state.rating} onChange={this.change}>\n                                <option>1</option>\n                                <option>2</option>\n                                <option>3</option>\n                                <option>4</option>\n                                <option>5</option>\n                            </select>\n                            </div>\n                            <div className=\"form-group\">\n                            <label>Picture URL</label>\n                                <input name =\"picture_url\" type=\"text\" className=\"form-control\" value={this.state.picture_url} onChange={this.change}></input>\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-dark btn-large\">Create New Movie Post</button>\n                            <Link to='/'><button className=\"btn btn-dark btn-large\" style={{marginLeft: \"20px\"}}> Cancel</button></Link>\n                        </form>\n                    </div>\n                </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  movie: state.movies.selected\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({\n    addMovie: addMovie\n  }, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddMovie);","import React, {Component} from 'react';\nimport MovieList from './components/MovieList';\nimport Movie from './components/Movie';\nimport AddMovie from './components/AddMovie';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\n\nclass App extends Component {\n  render() {\n    return (\n  <BrowserRouter>\n    <div>\n      <Switch>\n      <Route exact path='/' component={MovieList}/>\n      <Route path='/AddMovie' component={AddMovie}/> \n      <Route path='/:id' component={Movie}/>\n      </Switch>\n    </div>\n</BrowserRouter>\n    );\n  }\n}\n\n\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers/index'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport logger from 'redux-logger'\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst store = createStore(reducers, applyMiddleware(thunk,logger))\n\nReactDOM.render(<Provider store = { store }> <App /> </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}